/**
 *@Generated by sagacity-quickvo 4.11
 */
package com.sagframe.sqltoy.showcase.vo;

import org.sagacity.sqltoy.config.annotation.SqlToyEntity;
import java.math.BigDecimal;
import java.time.LocalDate;
import com.sagframe.sqltoy.showcase.vo.base.AbstractTdxCodeInfoVO;

/**
 * @project sqltoy-oracle
 * @author zhongxuchen
 * @version 1.0.0
 * Table: sqltoy_tdx_code_info,Remark:代码基本信息表 	
 */
@SqlToyEntity
public class TdxCodeInfoVO extends AbstractTdxCodeInfoVO {	
	/**
	 * 
	 */
	private static final long serialVersionUID = 2091869184885345479L;
	
	/** default constructor */
	public TdxCodeInfoVO() {
		super();
	}
	/*---begin-constructor-area---don't-update-this-area--*/
	/** pk constructor */
	public TdxCodeInfoVO(Integer market,String code)
	{
		this.market=market;
		this.code=code;
	}


	/** full constructor */
	public TdxCodeInfoVO(Integer market,String code,BigDecimal outstanding,Integer province,Integer industry,LocalDate updatedDate,LocalDate ipoDate,BigDecimal totals,BigDecimal countryShares,BigDecimal launchingShares,BigDecimal corporateShares,BigDecimal bShares,BigDecimal hShares,BigDecimal staffShares,BigDecimal totalAssets,BigDecimal liquidAssets,BigDecimal fixedAssets,BigDecimal intangibleAssets,Long holders,BigDecimal liquidLiabilities,BigDecimal longLiabilities,BigDecimal capitalFund,BigDecimal netAssets,BigDecimal mainIncome,BigDecimal mainProfit,BigDecimal receivables,BigDecimal operatingProfit,BigDecimal investmentsProfit,BigDecimal operatingCashFlow,BigDecimal totalCashFlow,BigDecimal remainder,BigDecimal totalProfit,BigDecimal afterTaxProfit,BigDecimal netProfit,BigDecimal undividedProfit,BigDecimal reserve1,BigDecimal reserve2)
	{
		this.market=market;
		this.code=code;
		this.outstanding=outstanding;
		this.province=province;
		this.industry=industry;
		this.updatedDate=updatedDate;
		this.ipoDate=ipoDate;
		this.totals=totals;
		this.countryShares=countryShares;
		this.launchingShares=launchingShares;
		this.corporateShares=corporateShares;
		this.bShares=bShares;
		this.hShares=hShares;
		this.staffShares=staffShares;
		this.totalAssets=totalAssets;
		this.liquidAssets=liquidAssets;
		this.fixedAssets=fixedAssets;
		this.intangibleAssets=intangibleAssets;
		this.holders=holders;
		this.liquidLiabilities=liquidLiabilities;
		this.longLiabilities=longLiabilities;
		this.capitalFund=capitalFund;
		this.netAssets=netAssets;
		this.mainIncome=mainIncome;
		this.mainProfit=mainProfit;
		this.receivables=receivables;
		this.operatingProfit=operatingProfit;
		this.investmentsProfit=investmentsProfit;
		this.operatingCashFlow=operatingCashFlow;
		this.totalCashFlow=totalCashFlow;
		this.remainder=remainder;
		this.totalProfit=totalProfit;
		this.afterTaxProfit=afterTaxProfit;
		this.netProfit=netProfit;
		this.undividedProfit=undividedProfit;
		this.reserve1=reserve1;
		this.reserve2=reserve2;
	}

	/*---end-constructor-area---don't-update-this-area--*/
	/**
     *@todo vo columns to String
     */
    @Override
	public String toString() {
		return super.toString();
	}
	
	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#clone()
	 */
	@Override
	public TdxCodeInfoVO clone() {
		try {
			return (TdxCodeInfoVO) super.clone();
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
		}
		return null;
	}
	
}
